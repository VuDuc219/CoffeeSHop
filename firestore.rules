rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection: Allow users to read/write their own data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Products Collection: Allow any authenticated user to read products.
    match /products/{productId} {
      allow read: if request.auth != null;
    }

    // Cart Collection: Allow users to manage their own cart items.
    // This rule is CRITICAL for 'Add to Cart' to work.
    match /cart/{cartId} {
      // Allow a user to CREATE a document if they are logged in and the new document's 'added_by' field matches their ID.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.added_by;
      
      // Allow a user to READ, UPDATE, or DELETE their own cart items.
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.added_by;
    }

    // Orders Collection: Users can create orders for themselves and read their own orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.order_by;
      allow read: if request.auth != null && request.auth.uid == resource.data.order_by;
    }

    // Chat Collections: Secure access to chat messages.
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.users;

      match /messages/{messageId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
        allow create: if request.auth != null && request.auth.uid == request.resource.data.uid && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
        allow update: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]) && request.resource.data.read == true;
      }
    }
  }
}
